name: 'Scrape'

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Target
        required: true
        options:
          - STAGE # www-stage.ankr.com/docs/
          - BS1 # https://bs-1-stage.dccn.ankr.com/docs/
          - BS2 # https://bs-2-stage.dccn.ankr.com/docs/
          - BS3 # https://bs-3-stage.dccn.ankr.com/docs/
          - BS4 # https://bs-4-stage.dccn.ankr.com/docs/
          - PROD # www.ankr.com/docs/

jobs:
  scrape:
    name: Rebuild Index
    runs-on: ubuntu-latest
    container:
      image: typesense/docsearch-scraper:latest
    steps:
      - name: Get DocSearch configuration
        id: docsearch-config
        run: echo "::set-output name=json::$(cat config.json | jq -r tostring)"
      - name: Get docsearch scraper docker image
        run: docker pull typesense/docsearch-scraper:latest
      - name: Indexing
        working-directory: /root
        env:
          HOME: /root
          TYPESENSE_API_KEY: ${{ secrets.TYPESENSE_API_KEY }}
          TYPESENSE_HOST: ${{ secrets.TYPESENSE_HOST }}
          TYPESENSE_PORT: ${{ secrets.TYPESENSE_PORT }}
          TYPESENSE_PROTOCOL: ${{ secrets.TYPESENSE_PROTOCOL }}
          CONFIG: ${{ steps.docsearch-config.outputs.json }}
        run: |
          echo "CONFIG=$CONFIG"
          docker run -e CONFIG -e TZ -e TYPESENSE_API_KEY -e TYPESENSE_HOST -e TYPESENSE_PORT -e TYPESENSE_PROTOCOL  typesense/docsearch-scraper
