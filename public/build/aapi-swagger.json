{"openapi":"3.0.3","info":{"title":"Ankr Advanced API","version":""},"servers":[{"url":"https://rpc.ankr.com/multichain/569ca1f392f7d3d0bb1073a1173ecb649af1d9249231fe59fa95db19d5ae41fe"}],"tags":[{"name":"Query API"},{"name":"Token API"},{"name":"NFT API"},{"name":"Early Access"}],"paths":{"/?ankr_getAccountBalance":{"post":{"tags":["Token API"],"summary":"ankr_getAccountBalance","description":"Retrieves the balance of the specified account.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getAccountBalance"],"type":"string"},"params":{"required":["walletAddress"],"type":"object","properties":{"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: eth. Multiple: [eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism, eth_goerli, polygon_mumbai, avalanche_fuji]. All chains: empty value."},"nativeFirst":{"type":"boolean","description":"Sorting order. Native network token first (true) or not (false)."},"onlyWhitelisted":{"type":"boolean","description":"Filtering. Only show tokens listed on CoinGekko (true) or all the tokens (false). Default — true."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — all, default value — all."},"pageToken":{"type":"string","description":"Current page token for pagination."},"walletAddress":{"type":"string","description":"Address to get the balance of."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Multi Chain":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getAccountBalance","params":{"walletAddress":"0x18b2a687610328590bc8f2e5fedde3b582a49cda"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["totalBalanceUsd","totalCount","assets"],"type":"object","properties":{"assets":{"type":"array","items":{"required":["blockchain","tokenName","tokenSymbol","tokenDecimals","tokenType","holderAddress","balance","balanceRawInteger","balanceUsd","tokenPrice","thumbnail"],"type":"object","properties":{"balance":{"type":"string","description":"Total balance of the token holder address."},"balanceRawInteger":{"type":"string","description":"Raw balance: value*10^decimals.."},"balanceUsd":{"type":"string","description":"Total value at the token holder address calculated by Ankr. US Dollars."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the token contract."},"holderAddress":{"description":"Address of the token holder."},"thumbnail":{"type":"string","description":"URL to the thumbnail (logo or symbol) of the token."},"tokenDecimals":{"type":"integer","description":"Number of decimals the tokens supports."},"tokenName":{"type":"string","description":"Name of the token."},"tokenPrice":{"type":"string","description":"Current price of the tokens. calculated by Ankr. US Dollars."},"tokenSymbol":{"type":"string","description":"Symbol of the token."},"tokenType":{"type":"string","description":"Type of the token. E.g., ERC20."}}},"description":"Assets at the address.","nullable":true},"nextPageToken":{"type":"string","description":"Next page token for pagination."},"totalBalanceUsd":{"type":"string","description":"Total value of assets at the address calculated by Ankr. US Dollars."},"totalCount":{"type":"integer","description":"Total number of all assets (ERC20) at the address."}},"description":"Result of the query."}}},"examples":{"Multi Chain":{"value":{"id":1,"jsonrpc":"2.0","result":{"assets":[{"balance":"1608.434310817656690616","balanceRawInteger":"1608434310817656690616","balanceUsd":"394175.866488091069305026","blockchain":"bsc","holderAddress":"0x18b2a687610328590bc8f2e5fedde3b582a49cda","thumbnail":"https://www.ankr.com/protocol/static/media/bsc.e1bfba92.svg","tokenDecimals":18,"tokenName":"Binance Smart Chain","tokenPrice":"245.068053968402063819","tokenSymbol":"BNB","tokenType":"NATIVE"},{"balance":"1.106063312048596845","balanceRawInteger":"1106063312048596845","balanceUsd":"1339.617032917654314456","blockchain":"eth","holderAddress":"0x18b2a687610328590bc8f2e5fedde3b582a49cda","thumbnail":"https://www.ankr.com/protocol/static/media/eth.3ee8ddd4.svg","tokenDecimals":18,"tokenName":"Ethereum","tokenPrice":"1211.157641994725049028","tokenSymbol":"ETH","tokenType":"NATIVE"},{"balance":"300000","balanceRawInteger":"30000000000000","balanceUsd":"1244.852927117672699968","blockchain":"polygon","contractAddress":"0x0b91b07beb67333225a5ba0259d55aee10e3a578","holderAddress":"0x18b2a687610328590bc8f2e5fedde3b582a49cda","thumbnail":"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x426CA1eA2406c07d75Db9585F22781c096e3d0E0/logo.png","tokenDecimals":8,"tokenName":"Minereum Polygon","tokenPrice":"0.004149509757058909","tokenSymbol":"MNEP","tokenType":"ERC20"}],"totalBalanceUsd":"398857.927815440716633863"}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst balances = async () =\u003e {\n  return await provider.getAccountBalance({\n    blockchain: 'eth',\n    walletAddress: '0xfa9019df60d3c710d7d583b2d69e18d412257617',\n  });\n};balances().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getBlockchainStats":{"post":{"tags":["Query API"],"summary":"ankr_getBlockchainStats","description":"Retrieves blockchain statistics.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getBlockchainStats"],"type":"string"},"params":{"type":"object","properties":{"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: bas_bombchain. Multiple: [eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism, eth_goerli, polygon_mumbai, avalanche_fuji]. All chains: empty value."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"All chains":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getBlockchainStats","params":{}}},"Specific chains":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getBlockchainStats","params":{"blockchain":["bsc","polygon"]}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["stats"],"type":"object","properties":{"stats":{"type":"array","items":{"required":["blockchain","totalTransactionsCount","totalEventsCount","latestBlockNumber","blockTimeMs","nativeCoinUsdPrice"],"type":"object","properties":{"blockTimeMs":{"minimum":0,"type":"integer","description":"Time of the latest block. Milliseconds."},"blockchain":{"type":"string","description":"Name of the blockchain or list of blockchain names, depending on the query."},"latestBlockNumber":{"minimum":0,"type":"integer","description":"Number of the latest block."},"nativeCoinUsdPrice":{"type":"string","description":"Price of the native token of the network calculated by Ankr. US Dollars."},"totalEventsCount":{"minimum":0,"type":"integer","description":"Number of total events emitted by contracts since the genesis block."},"totalTransactionsCount":{"minimum":0,"type":"integer","description":"Number of total transactions since the genesis block."}}},"description":"Statistics on the queried blockchain(s).","nullable":true}},"description":"Result of the query."}}},"examples":{"Reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"stats":[{"blockTimeMs":3000,"blockchain":"bsc","latestBlockNumber":24274429,"nativeCoinUsdPrice":"245.153233940444766334","totalEventsCount":11643833187,"totalTransactionsCount":3764960943},{"blockTimeMs":4000,"blockchain":"polygon","latestBlockNumber":37350500,"nativeCoinUsdPrice":"0.803307052493372837","totalEventsCount":8710949888,"totalTransactionsCount":2318753716}]}}}}}}}},"x-readme":{"code-samples":[{"code":"Currently, this method is not supported. \nRefer to the Shell tab.","install":"","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getBlocks":{"post":{"tags":["Query API"],"summary":"ankr_getBlocks","description":"Retrieves details of the specified range of blocks.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getBlocks"],"type":"string"},"params":{"required":["blockchain"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"decodeLogs":{"type":"boolean","description":"Decode logs (true) or not (false)."},"decodeTxData":{"type":"boolean","description":"Decode transaction data (true) or not (false)."},"descOrder":{"type":"boolean","description":"Sorting order. Descending (true) or ascending (false)."},"fromBlock":{"minimum":0,"type":"integer","description":"Number of the first block in a range. Integer or string (hex value or earliest). Max range — 30 blocks.","nullable":true},"includeLogs":{"type":"boolean","description":"Include logs (true) or exclude them (false). Logs are stored inside transactions, so includeTxs also has to be true when IncludeLogs is true."},"includeTxs":{"type":"boolean","description":"Include transactions (true) or exclude them (false). IncludeTxs has to be true if IncludeLogs is true."},"toBlock":{"description":"Number of the last block in a range. Integer or string (hex value or latest). Max range — 30 blocks.","nullable":true}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Latest block with txs and logs decoded":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getBlocks","params":{"blockchain":"eth","decodeLogs":true,"decodeTxData":true,"fromBlock":"latest","includeLogs":true,"includeTxs":true,"pageSize":1,"toBlock":"latest"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"type":"object","properties":{"blocks":{"type":"array","items":{"required":["blockchain","number","hash","parentHash","nonce","mixHash","sha3Uncles","logsBloom","stateRoot","miner","difficulty","extraData","size","gasLimit","gasUsed","timestamp","transactionsRoot","receiptsRoot","totalDifficulty","transactions","uncles"],"type":"object","properties":{"blockchain":{"type":"string","description":"Blockchain name."},"difficulty":{"type":"string","description":"Integer of the difficulty for this block encoded as a hexadecimal."},"extraData":{"type":"string","description":"Extra data of the block."},"gasLimit":{"type":"string","description":"Maximum gas allowed in this block."},"gasUsed":{"type":"string","description":"Total used gas by all transactions in this block."},"hash":{"type":"string","description":"Hash of the block. null if pending"},"logsBloom":{"type":"string","description":" Bloom filter for the logs of the block. null if pending"},"miner":{"type":"string","description":"Address of the beneficiary the mining rewards for the block were given to."},"mixHash":{"description":"String of a 256-bit hash encoded as a hexadecimal."},"nonce":{"type":"string","description":"Hash of the generated proof-of-work. null if pending"},"number":{"type":"string","description":"Number of the block encoded as a hexadecimal. null if pending."},"parentHash":{"description":"Has of the parent block."},"receiptsRoot":{"type":"string","description":"Root of the receipts trie of the block."},"sha3Uncles":{"type":"string","description":"SHA3 of the uncles data in the block."},"size":{"type":"string","description":"Size of this block in B."},"stateRoot":{"type":"string","description":"Root of the final state trie of the block"},"timestamp":{"type":"string","description":"UNIX timestamp when the block was collated."},"totalDifficulty":{"type":"string","description":"Integer of the total difficulty of the chain until this block."},"transactions":{"type":"array","items":{"required":["blockNumber","from","to","transactionIndex","blockHash","value","status","blockchain","timestamp"],"type":"object","properties":{"blockHash":{"description":"Hash of the block the transaction was in. null if a pending block. 32B."},"blockNumber":{"type":"string","description":"Number of the block the transaction was in. null if pending"},"blockchain":{"type":"string","description":"Name of the blockchain."},"contractAddress":{"description":"Address of the contract if the transaction was a contract creation, otherwise null."},"cumulativeGasUsed":{"type":"string","description":"Total amount of gas used when this transaction was executed in the block."},"from":{"description":"Address of the sender. 20B."},"gas":{"type":"string","description":"Gas provided by the sender."},"gasPrice":{"type":"string","description":"Gas price provided by the sender. Encoded as hexadecimal."},"gasUsed":{"type":"string","description":"Total used gas by all transactions in this block."},"hash":{"description":"Hash of the transaction. 32B."},"input":{"type":"string","description":"Data sent along with the transaction."},"logs":{"type":"array","items":{"required":["blockchain","address","topics","data","blockNumber","transactionHash","transactionIndex","blockHash","logIndex","removed"],"type":"object","properties":{"address":{"type":"string","description":"Address from which the log originated."},"blockHash":{"type":"string","description":"Hash of the block where the log was in. null when it's a pending log."},"blockNumber":{"type":"string","description":"Block number where the log was in. null when it's a pending log."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"data":{"type":"string","description":"One or more 32B non-indexed arguments of the log."},"event":{"type":"object","properties":{"anonymous":{"type":"boolean","description":"Anonymous event (true) or not (false)."},"id":{"description":"Hash of the event signature."},"inputs":{"type":"array","items":{"type":"object","properties":{"indexed":{"type":"boolean","description":"Indexed event input (true) or non-indexed (false)."},"name":{"type":"string","description":"Name of the input."},"size":{"type":"integer","description":"Size of the event input."},"type":{"type":"string","description":"Type of the input."},"valueDecoded":{"type":"string","description":"Decoded value of the event input (unmarshalled)."}}},"description":"Inputs of the event.","nullable":true},"name":{"type":"string","description":"Name of the event."},"signature":{"type":"string","description":"Signature of the event."},"string":{"type":"string","description":"String containing signature of the event."},"verified":{"type":"boolean","description":"Status of the contract. Verified (true) or not verified (false)."}},"description":"Metadata of the log."},"logIndex":{"type":"string","description":"Integer of the log index position in the block. null when it's a pending log."},"removed":{"type":"boolean","description":"Status of the log. True when the log was removed due to a chain reorganization, and false if it's a valid log."},"topics":{"type":"array","items":{"type":"string"},"description":"Array of zero to four 32B DATA of indexed log arguments. In Solidity, the first topic is the hash of the signature of the event (e.g. Deposit(address, bytes32, uint256)), except you declare the event with the anonymous specifier.","nullable":true},"transactionHash":{"type":"string","description":"Hash of the transactions the log was created from. null when its a pending log."},"transactionIndex":{"type":"string","description":"Integer of the transaction's index position that the log was created from. null when it's a pending log."}}},"description":"Array of log objects that the transaction generated."},"method":{"type":"object","properties":{"id":{"description":"Hashed signature of the called method."},"inputs":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the input parameter."},"size":{"type":"integer","description":"Size of the parameter in B."},"type":{"type":"string","description":"Type of the input parameter."},"valueDecoded":{"type":"string","description":"Decoded value of the parameter (unmarshalled)."}}},"description":"Input parameters.","nullable":true},"name":{"type":"string","description":"Name of the called contract method."},"signature":{"type":"string","description":"Signature of the called method."},"string":{"type":"string","description":"String containing signature of the called method."},"verified":{"type":"boolean","description":"Status of the contract. Verified (true) or not verified (false)."}},"description":"Name of the method if the transaction was sent to a contract. Empty if no contract."},"nonce":{"type":"string","description":"Total number of transactions ever sent by the sender prior to this transaction. Encoded as hexadecimal."},"r":{"type":"string","description":"R field of the signature."},"s":{"type":"string","description":"S field of the signature."},"status":{"type":"string","description":"Status of the transaction. 1 (success) or 0 (failure)."},"timestamp":{"type":"string","description":"UNIX timestamp when the block was collated."},"to":{"description":"Address of the receiver. null if a contract creation transaction. 20B.","nullable":true},"transactionIndex":{"type":"string","description":"Integer of the transactions index position in the block. null if pending."},"type":{"type":"string","description":"Type of the transaction."},"v":{"type":"string","description":"Standardized V field of the signature."},"value":{"type":"string","description":"Value transferred. Encoded as hexadecimal."}}},"description":"Array of transaction objects, or 32B transaction hashes depending on the last given parameter.","nullable":true},"transactionsRoot":{"type":"string","description":"Root of the transaction trie of the block."},"uncles":{"type":"array","items":{},"description":"Array of uncle hashes.","nullable":true}}},"description":"Information on the queried range of blocks.","nullable":true}},"description":"Result of the query."}}},"examples":{"Latest block with txs and logs decoded":{"value":{"id":1,"jsonrpc":"2.0","result":{"blocks":[{"blockchain":"eth","difficulty":"0x1b20c328a941b9","extraData":"0x486976656f6e2072752d686561767920634b4674","gasLimit":"0xe48bca","gasUsed":"0xe479c0","hash":"0xc652947d88fce6b290d99d6e45241e38807a3d00697d681b6bd4796ce243329e","logsBloom":"0x4131","miner":"0x1ad91ee08f21be3de0ba2ba6918e714da6b45836","mixHash":"0x27c55ee9b24b79ba8b33f52b7411a1f7757cb7c4ab66b1d604609cf2c1953ca2","nonce":"0xbf2230abdb929ebb","number":"0xc016d9","parentHash":"0x3323200e478c0c47d88d4e9d9ae8c3da02dfa88ee897eda0042477ee03c0c6f5","receiptsRoot":"0xfd445d3c0de66f9e1a66f031d7242da2a9f1d6fde10d11f96ed526f40e90b51e","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0xea61","stateRoot":"0xe154e45862394ac2a4218d3d8b725764ae98bb6e1ffb1f1b0b46e62e74b4cbab","timestamp":"0x60be5a40","totalDifficulty":"0x57be0653966d6abf487","transactions":[{"blockHash":"0x1e7b69036e5de4094839e186facabe2e3fb3586f52888bdb22f96e265f77aaeb","blockNumber":"0xf85b14","blockchain":"eth","cumulativeGasUsed":"0x57b86","from":"0x77223f67d845e3cbcd9cc19287e24e71f7228888","gas":"0x3012f","gasPrice":"0x298c22300","gasUsed":"0x200ca","hash":"0x4792bc24356c2ddb93fee10b153e04808ff4a08aca01f276a422eab88a5dd521","input":"0x0372e988016462e1719eb1692cb7af7016172262cb287f37aa000d4f","logs":[{"address":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","blockHash":"0x1e7b69036e5de4094839e186facabe2e3fb3586f52888bdb22f96e265f77aaeb","blockNumber":"0xf85b14","blockchain":"eth","data":"0x000000000000000000000000000000000000000000000000008d702a9a8be800","event":{"anonymous":false,"id":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","inputs":[{"indexed":true,"name":"_from","size":20,"type":"address","valueDecoded":"0x00000000A991C429eE2Ec6df19d40fe0c80088B8"},{"indexed":true,"name":"_to","size":20,"type":"address","valueDecoded":"0x72e988016462e1719Eb1692cB7aF7016172262cb"},{"indexed":false,"name":"_value","size":256,"type":"uint256","valueDecoded":"39811300000000000"}],"name":"Transfer","signature":"Transfer(address,address,uint256)","string":"event Transfer(address indexed _from, address indexed _to, uint256 _value)","verified":false},"logIndex":"0x2","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000000000000a991c429ee2ec6df19d40fe0c80088b8","0x00000000000000000000000072e988016462e1719eb1692cb7af7016172262cb"],"transactionHash":"0x4792bc24356c2ddb93fee10b153e04808ff4a08aca01f276a422eab88a5dd521","transactionIndex":"0x5"}],"nonce":"0x1182","r":"0x3857d29f619e161e00141abecf5f3420dfbda34dfaf7e10cac20758c5cdd2d0f","s":"0x7843a450a5f1224e9d6e10e7518b9aba67e6dd1b442c11b3e8926eaca3b72546","status":"0x1","timestamp":"0x63aaec8b","to":"0x00000000a991c429ee2ec6df19d40fe0c80088b8","transactionIndex":"0x5","type":"0x2","v":"0x1","value":"0x61321"}],"transactionsRoot":"0x1729c1795404e9291ef12556fdf2ed61a2ad228cc29b76ef5d04c3e9f35f3ade","uncles":[]}]}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\\n\\const blocks = async () =\u003e {\n  return await provider.getBlocks({\n    blockchain: 'bsc',\n    fromBlock: 100,\n    toBlock: 129,\n  });\n};blocks().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getCurrencies":{"post":{"tags":["Token API"],"summary":"ankr_getCurrencies","description":"Retrieves a list of all currencies used on the specified blockchain.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getCurrencies"],"type":"string"},"params":{"required":["blockchain"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Request example":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getCurrencies","params":{"blockchain":"polygon"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["currencies"],"type":"object","properties":{"currencies":{"type":"array","items":{"required":["blockchain","name","decimals","symbol","thumbnail"],"type":"object","properties":{"address":{"type":"string","description":"Address of the token contract. Empty for the native coin."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"decimals":{"minimum":0,"type":"integer","description":"Number of decimals the token supports."},"name":{"type":"string","description":"Name of the token."},"symbol":{"type":"string","description":"Symbol of the token."},"thumbnail":{"type":"string","description":"URL to the thumbnail (logo or symbol) of the token."}}},"description":"Currencies and their metadata for the blockchain specified by request body parameters.","nullable":true}},"description":"Result of the query."}}},"examples":{"Reply example":{"value":{"id":1,"jsonrpc":"2.0","result":{"currencies":[{"address":"0x2727ab1c2d22170abc9b595177b2d5c6e1ab7b7b","blockchain":"polygon","decimals":18,"name":"Cartesi Token (PoS)","symbol":"CTSI","thumbnail":"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/polygon/assets/0x2727Ab1c2D22170ABc9b595177B2D5C6E1Ab7B7B/logo.png"},{"address":"0x580a84c73811e1839f75d86d75d88cca0c241ff4","blockchain":"polygon","decimals":18,"name":"Qi Dao","symbol":"QI","thumbnail":"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/polygon/assets/0x580A84C73811E1839F75d86d75d88cCa0c241fF4/logo.png"}]}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst currencies = async () =\u003e {\n  return await provider.getCurrencies({ blockchain: 'fantom' });\n};currencies().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getInteractions":{"post":{"tags":["Query API"],"summary":"ankr_getInteractions","description":"Retrieves a list of blockchains on which interactions (tokens, NFTs, transactions) were registered for the specified address.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getInteractions"],"type":"string"},"params":{"required":["address"],"type":"object","properties":{"address":{"type":"string","description":"Address of a wallet or a contract."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Request example":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getInteractions","params":{"address":"0xF977814e90dA44bFA03b6295A0616a897441aceC"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["blockchains"],"type":"object","properties":{"blockchains":{"type":"array","items":{"type":"string"},"description":"Names of the blockchains the address sent or received transactions on.","nullable":true}},"description":"Result of the query."}}},"examples":{"Reply example":{"value":{"id":1,"jsonrpc":"2.0","result":{"blockchains":["bsc","fantom","polygon","arbitrum","optimism","avalanche","eth"]}}}}}}}},"x-readme":{"code-samples":[{"code":"Currently, this method is not supported. \nRefer to the Shell tab.","install":"","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getInternalTransactionsByBlockNumber":{"post":{"tags":["Early Access"],"summary":"ankr_getInternalTransactionsByBlockNumber","description":"Retrieves the details of internal transactions for the specified block number. Internal transactions are callbacks that happen during contract-to-contract interactions.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getInternalTransactionsByBlockNumber"],"type":"string"},"params":{"required":["blockchain"],"type":"object","properties":{"blockNumber":{"minimum":0,"type":"integer","description":"Number of the block that contains the transaction."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"onlyWithValue":{"type":"boolean","description":"Filtering. Only responses containing the value parameter (true) or all responses (false)."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Request":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getInternalTransactionsByBlockNumber","params":{"blockNumber":15218456,"blockchain":"eth","onlyWithValue":true}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"type":"object","properties":{"internalTransactions":{"type":"array","items":{"type":"object","properties":{"blockHash":{"description":"Hash of the block with the transaction."},"blockHeight":{"minimum":0,"type":"integer","description":"Number of the block with the transaction."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"callPath":{"type":"string","description":"Path of the internal calls."},"callStack":{"type":"array","items":{"minimum":0,"type":"integer"},"description":"Number of the call in the stack."},"callType":{"type":"string","description":"Type of the call: call, create, or suicide."},"contractAddress":{"description":"Address of the contract.","nullable":true},"error":{"type":"string","description":"Error message."},"fromAddress":{"type":"string","description":"Address the internal transaction was sent from."},"gas":{"minimum":0,"type":"integer","description":"Gas provided by the sender."},"gasUsed":{"minimum":0,"type":"integer","description":"Total used gas by all transactions in this block."},"input":{"type":"string","description":"Input parameters."},"output":{"description":"Output parameters."},"timestamp":{"type":"string","description":"UNIX timestamp when the block with the parent and internal transaction was collated."},"toAddress":{"description":"Address the internal transaction was sent to."},"transactionHash":{"type":"string","description":"Hash of the parent transaction."},"transactionIndex":{"minimum":0,"type":"integer","description":" Integer of the transaction's index position ?????????????."},"value":{"type":"string","description":"Value transferred."}}},"description":"Internal transactions.","nullable":true},"nextPageToken":{"type":"string","description":"Next page token for pagination."}},"description":"Result of the query."}}},"examples":{"Reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"internalTransactions":[{"blockHash":"0xbb07ad76eca8b2a1ed8f58ce107eceb720a1468affa20223fc8cb562efa9639a","blockHeight":15218456,"blockchain":"eth","callPath":"call_2","callStack":[2],"contractAddress":"0x00000000006c3852cbef3e08e8df289169ede581","error":"","fromAddress":"0x00000000006c3852cbef3e08e8df289169ede581","input":null,"output":null,"timestamp":"1658843328","toAddress":"0x8de9c5a032463c561423387a9648c5c7bcc5bc90","transactionHash":"0xdfca28001e023c90ab8d67f2b4099df76cda0493865821387734640425637696","transactionIndex":4,"value":"33750000000000000"}]}}}}}}}},"x-readme":{"code-samples":[{"code":"Currently, this method is not supported. \nRefer to the Shell tab.","install":"","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getInternalTransactionsByParentHash":{"post":{"tags":["Early Access"],"summary":"ankr_getInternalTransactionsByParentHash","description":"Retrieves the details of internal transactions for the specified parent transaction hash. Internal transactions are callbacks that happen during contract-to-contract interactions.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getInternalTransactionsByParentHash"],"type":"string"},"params":{"required":["blockchain","parentTransactionHash"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"onlyWithValue":{"type":"boolean","description":"Filtering. Only responses containing the value parameter (true) or all responses (false)."},"parentTransactionHash":{"type":"string","description":"Hash of the parents transaction — the one that caused internal transaction."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Request":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getInternalTransactionsByParentHash","params":{"blockchain":"eth","onlyWithValue":true,"parentTransactionHash":"0xa50f8744e65cb76f66f9d54499d5401866a75d93db2e784952f55205afc3acc5"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"type":"object","properties":{"internalTransactions":{"type":"array","items":{"type":"object","properties":{"blockHash":{"description":"Hash of the block with the transaction."},"blockHeight":{"minimum":0,"type":"integer","description":"Number of the block with the transaction."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"callPath":{"type":"string","description":"Path of the internal calls."},"callStack":{"type":"array","items":{"minimum":0,"type":"integer"},"description":"Number of the call in the stack."},"callType":{"type":"string","description":"Type of the call: call, create, or suicide."},"contractAddress":{"description":"Address of the contract.","nullable":true},"error":{"type":"string","description":"Error message."},"fromAddress":{"type":"string","description":"Address the internal transaction was sent from."},"gas":{"minimum":0,"type":"integer","description":"Gas provided by the sender."},"gasUsed":{"minimum":0,"type":"integer","description":"Total used gas by all transactions in this block."},"input":{"type":"string","description":"Input parameters."},"output":{"description":"Output parameters."},"timestamp":{"type":"string","description":"UNIX timestamp when the block with the parent and internal transaction was collated."},"toAddress":{"description":"Address the internal transaction was sent to."},"transactionHash":{"type":"string","description":"Hash of the parent transaction."},"transactionIndex":{"minimum":0,"type":"integer","description":" Integer of the transaction's index position ?????????????."},"value":{"type":"string","description":"Value transferred."}}},"description":"Internal transactions.","nullable":true},"nextPageToken":{"type":"string","description":"Next page token for pagination."}},"description":"Result of the query."}}},"examples":{"Reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"internalTransactions":[{"blockHash":"0xee3d5db51c965922f589c9ac9a16f5c77ba36ca55df651dccc1ccabdb5146b5f","blockHeight":15219110,"blockchain":"eth","callPath":"call_2","callStack":[2],"contractAddress":"0x00000000006c3852cbef3e08e8df289169ede581","error":"","fromAddress":"0x00000000006c3852cbef3e08e8df289169ede581","input":null,"output":null,"timestamp":"1658852109","toAddress":"0x8de9c5a032463c561423387a9648c5c7bcc5bc90","transactionHash":"0xa50f8744e65cb76f66f9d54499d5401866a75d93db2e784952f55205afc3acc5","transactionIndex":6,"value":"250000000000000"},{"blockHash":"0xee3d5db51c965922f589c9ac9a16f5c77ba36ca55df651dccc1ccabdb5146b5f","blockHeight":15219110,"blockchain":"eth","callPath":"call_3","callStack":[3],"contractAddress":"0x00000000006c3852cbef3e08e8df289169ede581","error":"","fromAddress":"0x00000000006c3852cbef3e08e8df289169ede581","input":null,"output":null,"timestamp":"1658852109","toAddress":"0xcc71606c7a3eda45ae010e5a125312f0bad1bae7","transactionHash":"0xa50f8744e65cb76f66f9d54499d5401866a75d93db2e784952f55205afc3acc5","transactionIndex":7,"value":"9750000000000000"}]}}}}}}}},"x-readme":{"code-samples":[{"code":"Currently, this method is not supported. \nRefer to the Shell tab.","install":"","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getLogs":{"post":{"tags":["Query API"],"summary":"ankr_getLogs","description":"Retrieves historical data for the specified range of blocks.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getLogs"],"type":"string"},"params":{"type":"object","properties":{"address":{"type":"array","items":{"type":"string"},"description":"Сontract address or a list of addresses from which logs should originate."},"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: eth. Multiple: [eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism, eth_goerli, polygon_mumbai, avalanche_fuji]. All chains: empty value.","nullable":true},"decodeLogs":{"type":"boolean","description":"Decode logs (true) or not (false)."},"descOrder":{"type":"boolean","description":"Sorting order. Descending (true) or ascending (false)."},"fromBlock":{"minimum":0,"type":"integer","description":"Number of the first block in a range. Integer or string (hex value or earliest)."},"fromTimestamp":{"minimum":0,"type":"integer","description":"Beginning of a time period. UNIX timestamp."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 10000, default value — 1000.","default":1000},"pageToken":{"type":"string","description":"Current page token for pagination."},"toBlock":{"description":"Number of the last block in a range. Integer or string (hex value or latest)."},"toTimestamp":{"description":"End of a time period. UNIX timestamp."},"topics":{"type":"array","items":{"type":"array","items":{"type":"array","items":{"minimum":0,"type":"integer"}}},"description":"An array of DATA topics."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"From earliest to latest":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getLogs","params":{"address":["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],"blockchain":"eth","fromBlock":"earliest","pageSize":1,"toBlock":"latest","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"]}}},"Pagination":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getLogs","params":{"address":["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],"blockchain":"eth","fromBlock":"earliest","pageSize":10,"pageToken":"BTpvRzNUs3GnYWodAVSQEL6eEPL5Kd1epyUBTym9y3paNH4bZ9CQreQFz1oGPZBWBoJHYT7aH1PDwRKV9s","toBlock":"latest","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"]}}},"With event decoding":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getLogs","params":{"address":["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],"blockchain":"eth","decodeLogs":true,"fromBlock":"0xdaf6b1","toBlock":14350010,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff","0x0000000000000000000000003dd49f67e9d5bc4c5e6634b3f70bfd9dc1b6bd74"]}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["logs"],"type":"object","properties":{"logs":{"type":"array","items":{"required":["blockchain","address","topics","data","blockNumber","transactionHash","transactionIndex","blockHash","logIndex","removed"],"type":"object","properties":{"address":{"type":"string","description":"Address from which the log originated."},"blockHash":{"type":"string","description":"Hash of the block where the log was in. null when it's a pending log."},"blockNumber":{"type":"string","description":"Block number where the log was in. null when it's a pending log."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"data":{"type":"string","description":"One or more 32B non-indexed arguments of the log."},"event":{"type":"object","properties":{"anonymous":{"type":"boolean","description":"Anonymous event (true) or not (false)."},"id":{"type":"string","description":"Hash of the event signature."},"inputs":{"type":"array","items":{"type":"object","properties":{"indexed":{"type":"boolean","description":"Indexed event input (true) or non-indexed (false)."},"name":{"type":"string","description":"Name of the input."},"size":{"type":"integer","description":"Size of the event input."},"type":{"type":"string","description":"Type of the input."},"valueDecoded":{"type":"string","description":"Decoded value of the event input (unmarshalled)."}}},"description":"Inputs of the event.","nullable":true},"name":{"type":"string","description":"Name of the event."},"signature":{"type":"string","description":"Signature of the event."},"string":{"type":"string","description":"String containing signature of the event."},"verified":{"type":"boolean","description":"Status of the contract. Verified (true) or not verified (false)."}},"description":"Metadata of the log."},"logIndex":{"type":"string","description":"Integer of the log index position in the block. null when it's a pending log."},"removed":{"type":"boolean","description":"Status of the log. True when the log was removed due to a chain reorganization, and false if it's a valid log."},"topics":{"type":"array","items":{"type":"string"},"description":"Array of zero to four 32B DATA of indexed log arguments. In Solidity, the first topic is the hash of the signature of the event (e.g. Deposit(address, bytes32, uint256)), except you declare the event with the anonymous specifier.","nullable":true},"transactionHash":{"type":"string","description":"Hash of the transactions the log was created from. null when its a pending log."},"transactionIndex":{"type":"string","description":"Integer of the transaction's index position that the log was created from. null when it's a pending log."}}},"description":"Logs on the queried range of blocks.","nullable":true},"nextPageToken":{"type":"string","description":"Next page token for pagination."}},"description":"Result of the query."}}},"examples":{"With event decoding":{"value":{"id":1,"jsonrpc":"2.0","result":{"logs":[{"address":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","blockHash":"0x76fe73c4d2a66bb0cba343482521c8cd44f0ef824e97493f3c4f3e5140422ea5","blockNumber":"0xdaf6b4","blockchain":"eth","data":"0x00000000000000000000000000000000000000000000000000787f498b5b22b7","event":{"anonymous":false,"id":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","inputs":[{"indexed":true,"name":"_from","size":20,"type":"address","valueDecoded":"0xDef1C0ded9bec7F1a1670819833240f027b25EfF"},{"indexed":true,"name":"_to","size":20,"type":"address","valueDecoded":"0x3dd49f67E9d5Bc4C5E6634b3F70BfD9dc1b6BD74"},{"indexed":false,"name":"_value","size":256,"type":"uint256","valueDecoded":"33916951052624567"}],"name":"Transfer","signature":"Transfer(address,address,uint256)","string":"event Transfer(address indexed _from, address indexed _to, uint256 _value)","verified":false},"logIndex":"0x49","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff","0x0000000000000000000000003dd49f67e9d5bc4c5e6634b3f70bfd9dc1b6bd74"],"transactionHash":"0x6f11297b0964a0fb0630e6667093a6c9cee4b383495c94e99becc6b88aed8f14","transactionIndex":"0x3f"}]}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst logs = async () =\u003e {\n  return await provider.getLogs({\n    blockchain: 'eth',\n    fromBlock: 1181739,\n    toBlock: 1181749,\n    topics: [\n      [],\n      ['0x000000000000000000000000feb92d30bf01ff9a1901666c5573532bfa07eeec'],\n    ],\n    address: '0x3589d05a1ec4af9f65b0e5554e645707775ee43c',\n    decodeLogs: false,\n  });\n};logs().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getNFTHolders":{"post":{"tags":["NFT API"],"summary":"ankr_getNFTHolders","description":"Retrieves a list of holders (wallet addresses) of the specified NFT.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getNFTHolders"],"type":"string"},"params":{"required":["blockchain","contractAddress"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Contract address of the NFT collection. Supports ENS."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 10000, default value — 1000."},"pageToken":{"type":"string","description":"Current page token for pagination."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Paginated":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getNFTHolders","params":{"blockchain":"arbitrum","contractAddress":"0xc36442b4a4522e871399cd717abdd847ab11fe88","pageSize":10}}},"Paginated next page":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getNFTHolders","params":{"blockchain":"arbitrum","contractAddress":"0xc36442b4a4522e871399cd717abdd847ab11fe88","pageSize":10,"pageToken":"rFN6s7bcVaihtGvazmFxvsyFkoDx39sPyMULxoGT6SuoFi3tHzeAqmkVbzCtDCAQhFt6TsngYzVdMaWj"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["holders"],"type":"object","properties":{"holders":{"type":"array","items":{"type":"string"},"description":"Holders of the queried NFT.","nullable":true},"nextPageToken":{"type":"string","description":"Next page token for pagination."}},"description":"Result of the query."}}},"examples":{"Paginated reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"holders":["0x000000000000000000000000000000000000dead","0x000000000000d34c44564053af35e4fe271d0caa","0x00000000000a29a0800f6f557ddbbe8249397de7","0x00000000005dbcb0d0513fcda746382fe8a53468","0x0000000000f485a774ee60343ad3ac6d05d95fba","0x000000004b60a12164e6942dcd3e007f079b725b","0x00000001b01122945d67cf7c972f1a2063ca4008","0x00000002f32c0886ee65d68059fbdb76ef6a6996","0x0000000813b34008a225de08a6a61835508c71f9","0x00000009d94baf057697d988d2e3eec2fce81162"],"nextPageToken":"rFN6s7bcVaihtGvazmFxvsyFkoDx39sPyMULxoGT6SuoFi3tHzeAqmkVbzCtDCAQhFt6TsngYzVdMaWj"}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst nftHolders = async () =\u003e {\n  return await provider.getNFTHolders({ \n    blockchain: 'arbitrum',\n    contractAddress: '0xc36442b4a4522e871399cd717abdd847ab11fe88',\n    pageSize: 1000,\n    pageToken: '' });\n};\nnftHolders().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getNFTMetadata":{"post":{"tags":["NFT API"],"summary":"ankr_getNFTMetadata","description":"Retrieves the metadata of to the specified NFT (ERC721/ERC1155/ENS/POAP).","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getNFTMetadata"],"type":"string"},"params":{"required":["contractAddress"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the NFT contract the metadata belongs to. Supports ENS."},"forceFetch":{"type":"boolean","description":"Get NFT metadata from the contract (true) or database (false)."},"tokenId":{"type":"string","description":"Token ID of the NFT the metadata belongs to. Created by the contract when minting the NFT."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"NFT Metadata":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getNFTMetadata","params":{"blockchain":"avalanche","contractAddress":"0x8d01c8ee82e581e55c02117a676b5bbd4734fabb","tokenId":"23240"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["metadata","attributes"],"type":"object","properties":{"attributes":{"type":"object","properties":{"contractType":{"description":"Type of the NFT contract. ERC721 or ERC1155."},"description":{"type":"string","description":"Description of the NFT."},"imageUrl":{"type":"string","description":"URL to the thumbnails of the NFT. Usually, an IPFS link."},"name":{"type":"string","description":"Name of the NFT."},"tokenUrl":{"type":"string","description":"URL to the page with NFT details."},"traits":{"type":"array","items":{"type":"object","properties":{"trait_type":{"type":"string","description":"Specific trait type (e.g., eye color)."},"value":{"type":"string","description":"Specific trait value (e.g., blue)."}}},"description":"Array of pre-defined NFT traits: trait types and their value."}},"description":"Attributes of the NFT.","nullable":true},"metadata":{"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"collectionName":{"type":"string","description":"Name of the collection the NFT belongs to."},"collectionSymbol":{"type":"string","description":"Symbol of the collection the NFT belongs to."},"contractAddress":{"type":"string","description":"Address of the NFT contract."},"contractType":{"type":"integer","description":"Type of the NFT contract. ERC721 or ERC1155."},"tokenId":{"type":"string","description":"URL to the page with NFT details."}},"description":"Metadata of the NFT.","nullable":true}},"description":"Result of the query."}}},"examples":{"NFT Metadata":{"value":{"id":1,"jsonrpc":"2.0","result":{"attributes":{"contractType":"ERC721","description":"Rock #23240, can be used to play Rock Game","imageUrl":"https://ipfs.io/ipfs/QmPktcEDiRD9qNwc497mwQkJ3zYFQtHwFooPLkgDdRqU4R/23240.png","name":"Rock 23240","tokenUrl":"https://ipfs.io/ipfs/QmYen4cGUc3gF9UQnCycq2AADYLYzoM6mvVzoajAXTr7vH/rock23240.json","traits":[{"trait_type":"face","value":"Brown"},{"trait_type":"nose","value":"Regular Nose"},{"trait_type":"mouth","value":"Chinstrap"},{"trait_type":"eyes","value":"Big Shades"},{"trait_type":"hair","value":"Stringy Hair"},{"trait_type":"accessories","value":"Earring"}]},"metadata":{"blockchain":"avalanche","collectionName":"Rock","collectionSymbol":"ROCK","contractAddress":"0x8d01c8ee82e581e55c02117a676b5bbd4734fabb","contractType":"ERC721","tokenId":"23240"}}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst nftMetadata = async () =\u003e {\n  return await provider.getNFTMetadata({ \n   blockchain: 'avalanche',\n    contractAddress: '0x8d01c8ee82e581e55c02117a676b5bbd4734fabb',\n    tokenId: '23240' });\n};\nnftMetadata().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getNFTsByOwner":{"post":{"tags":["NFT API"],"summary":"ankr_getNFTsByOwner","description":"Retrieves a list of NFTs (ERC721/ERC1155/ENS/POAP) that belong to the specified account.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getNFTsByOwner"],"type":"string"},"params":{"required":["walletAddress"],"type":"object","properties":{"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: eth. Multiple: [arbitrum, avalanche, avalanche_fuji, bsc, eth, eth_goerli, fantom, optimism, polygon, polygon_mumbai, syscoin]. All chains: empty value."},"filter":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}},"nullable":true},"description":"Filtering. Contract address (retrieves all NFTS by the address) or contract address plus NFT ID (retrieves only that NFT). key-value."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 50, default value — 10."},"pageToken":{"type":"string","description":"Current page token for pagination."},"walletAddress":{"type":"string","description":"Address to query for NFTs. Supports ENS."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"By ENS address":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getNFTsByOwner","params":{"walletAddress":"vitalik.eth"}}},"With Filter":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getNFTsByOwner","params":{"blockchain":["eth"],"filter":[{"0x700b4b9f39bb1faf5d0d16a20488f2733550bff4":[]},{"0xd8682bfa6918b0174f287b888e765b9a1b4dc9c3":["8937"]}],"pageSize":1,"pageToken":"","walletAddress":"0x0E11A192d574b342C51be9e306694C41547185DD"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["owner","assets"],"type":"object","properties":{"assets":{"type":"array","items":{"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name or names of the blockchain(s)."},"collectionName":{"type":"string","description":"Name of the collection the NFT belongs to."},"contractAddress":{"description":"Address of the NFT contract."},"contractType":{"type":"integer","description":"Type of the NFT contract. ERC721 or ERC1155."},"imageUrl":{"type":"string","description":"URL to the thumbnails of the NFT. Usually, an IPFS link."},"name":{"type":"string","description":"Name of the NFT."},"quantity":{"type":"string","description":"Quantity of NFTs at the contract. Depends on the contract type. "},"symbol":{"type":"string","description":"Symbol of the collection the NFT belongs to."},"tokenId":{"type":"string","description":"Token ID of the NFT. Created by the contract when minting it."},"tokenUrl":{"type":"string","description":"URL to the page with NFT details."},"traits":{"type":"array","items":{"type":"object","properties":{"trait_type":{"type":"string","description":"Specific trait type (e.g., eye color)."},"value":{"type":"string","description":"Specific trait value (e.g., blue)."}}},"description":"Array of pre-defined NFT traits: trait types and their values."}}},"description":"NFTs owned by the address.","nullable":true},"nextPageToken":{"type":"string","description":"Next page token for pagination."},"owner":{"type":"string","description":"Wallet address. Supports ENS."}},"description":"Result of the query."}}},"examples":{"Paginated results":{"value":{"id":1,"jsonrpc":"2.0","result":{"assets":[{"blockchain":"eth","collectionName":"Cool Oliens","contractAddress":"0x03a1e037df88001bf867e3bcffa7e48bab0cf5a6","contractType":"ERC721","imageUrl":"https://ipfs.io/ipfs/QmTzuLQSn78keGt3n36b3tNNs7B3WMjo2SNJUF9rRshPjA/116.png","name":"Cool Oliens #117","symbol":"COOLIEN","tokenId":"116","tokenUrl":"https://ipfs.io/ipfs/QmdT4pLoe5w93rCnESnaEXBU7PaAiSSWuDDXurLhmzVvAz/116","traits":[{"trait_type":"NFT ID","value":"117 "},{"trait_type":"Rank","value":"199 "}]}],"nextPageToken":"2hMDmwWDCKfaN8VPERnkckY4JWbRyDurn8LyreDRZbyprWUErKSC6AoGbKerumFnyG1SAkWHxs","owner":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045"}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst nfts = async () =\u003e {\n  return await provider.getNFTsByOwner({\n    blockchain: 'eth',\n    walletAddress: '0x0E11A192d574b342C51be9e306694C41547185DD',\n    filter: [\n      { '0x700b4b9f39bb1faf5d0d16a20488f2733550bff4': [] },\n      { '0xd8682bfa6918b0174f287b888e765b9a1b4dc9c3': ['8937'] },\n    ],\n  });\n};nfts().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getNftTransfers":{"post":{"tags":["Early Access"],"summary":"ankr_getNftTransfers","description":"Retrieves the details of NFT transfers for the specified address.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getNftTransfers"],"type":"string"},"params":{"type":"object","properties":{"address":{"type":"array","items":{"type":"string"},"description":"Address or a list of addresses to get transfer information on."},"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: eth. Multiple: [eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism, eth_goerli, polygon_mumbai, avalanche_fuji]. All chains: empty value.","nullable":true},"descOrder":{"type":"boolean","description":"Sorting order. Descending (true) or ascending (false)."},"fromBlock":{"minimum":0,"type":"integer","description":"Number of the first block in a range. Integer or string (hex value or earliest)."},"fromTimestamp":{"description":"Beginning of a time period. UNIX timestamp."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 10000, default value — 100."},"pageToken":{"type":"string","description":"Current page token for pagination."},"toBlock":{"description":"Number of the last block in a range. Integer or string (hex value or latest)."},"toTimestamp":{"description":"End of a time period. UNIX timestamp."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"By timestamp range":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getNftTransfers","params":{"address":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","blockchain":["bsc"],"fromTimestamp":1655197483,"pageSize":2,"toTimestamp":1671974699}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["transfers"],"type":"object","properties":{"nextPageToken":{"type":"string","description":"Next page token for pagination."},"transfers":{"type":"array","items":{"required":["fromAddress","toAddress","value","type","blockchain","transactionHash","collectionName","collectionSymbol","name","imageUrl","blockHeight","timestamp"],"type":"object","properties":{"blockHeight":{"minimum":0,"type":"integer","description":"Number of the block with the NFT transaction."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name or names of the blockchain(s), depending on the query."},"collectionName":{"type":"string","description":"Name of the collection the NFT belongs to."},"collectionSymbol":{"type":"string","description":"Symbol of the collection the NFT belongs to."},"contractAddress":{"description":"Contract address of the NFT."},"fromAddress":{"type":"string","description":"Address the NFT was sent from."},"imageUrl":{"type":"string","description":"URL of the NFT thumbnail. Usually, an IPFS link."},"name":{"type":"string","description":"Name of the NFT."},"timestamp":{"minimum":0,"type":"integer","description":"UNIX timestamp when the block with the NFT transaction was collated."},"toAddress":{"description":"Address the NFT was sent to."},"tokenId":{"type":"string","description":"Token ID of the NFT. Created by the contract when minting it."},"transactionHash":{"type":"string","description":"Hash of the transaction that involved the NFT transfer."},"type":{"type":"integer","description":"Type of the NFT. ERC721 or ERC1155."},"value":{"type":"string","description":"Amount of NFTs transferred."}}},"description":"NFT transfers for the address.","nullable":true}},"description":"Result of the query."}}},"examples":{"Reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"transfers":[{"blockHeight":19116577,"blockchain":"bsc","collectionName":"","collectionSymbol":"","contractAddress":"0x36f8f51f65fe200311f709b797baf4e193dd0b0d","fromAddress":"0x186ea56f0a40c5593a697b3e804968b8c5920ff3","imageUrl":"","name":"","timestamp":1656519782,"toAddress":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","tokenId":"12","transactionHash":"0x95ae64003124fe4c3e8702364136d25c3d0f2fdbbf953bd815785f06d5cb6025","type":"ERC1155","value":"1"},{"blockHeight":19357744,"blockchain":"bsc","collectionName":"CheersBio Capsule","collectionSymbol":"CBC","contractAddress":"0x999017cb5652caf5f324a8e44f813903ba3c46eb","fromAddress":"0x0000000000000000000000000000000000000000","imageUrl":"https://ipfs.io/ipfs/QmZCS7HtmQZtUPLTR1LaLhCwW5W22c1jCociw7Pvi3Autg","name":"RSS3 Chain Friends #36957","timestamp":1657244377,"toAddress":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","tokenId":"36957","transactionHash":"0xac2d856630eb80270a3b75538977832ac6d7c19100f41b804d3c100958bcb3ab","type":"ERC721","value":"1"}]}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst nftTransfers = async () =\u003e {\n  return await provider.getNftTransfers({ \n    blockchain: ['eth', 'bsc'],\n    address: '0xd8da6bf26964af9d7eed9e03e53415d37aa96045',\n    fromTimestamp: 1672563107,\n    toTimestamp: 1672563107 });\n};\nnftTransfers().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getTokenHolders":{"post":{"tags":["Token API"],"summary":"ankr_getTokenHolders","description":"Retrieves the metadata and a list of holders (wallet addresses) of the specified token.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getTokenHolders"],"type":"string"},"params":{"required":["blockchain","contractAddress"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the token contract."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 10000, default value — 10000."},"pageToken":{"type":"string","description":"Current page token for pagination."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"With next page token":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenHolders","params":{"blockchain":"eth","contractAddress":"0x40eb746dee876ac1e78697b7ca85142d178a1fc8","pageSize":2,"pageToken":"HUAjC8b1LGxx7soyEPoojoahpqtPaAhk6jTx35dALF6jLH85QD4oHWRA8E1Wf9MqjffsuHfg6pg5ac6Eocb"}}},"With pagination":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenHolders","params":{"blockchain":"eth","contractAddress":"0x40eb746dee876ac1e78697b7ca85142d178a1fc8","pageSize":2}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["blockchain","contractAddress","tokenDecimals","holders","holdersCount","nextPageToken"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the token contract."},"holders":{"type":"array","items":{"type":"object","properties":{"balance":{"type":"string","description":"Token balance at the holder's address."},"balanceRawInteger":{"type":"string","description":"Raw token balance: value*10^decimals."},"holderAddress":{"description":"Address of a holder of the token."}}},"description":"Addresses of holders of the token.","nullable":true},"holdersCount":{"type":"integer","description":"Number of total holders of the token."},"nextPageToken":{"type":"string","description":"Next page token for pagination."},"tokenDecimals":{"type":"integer","description":"Number of decimals the token supports."}},"description":"Result of the query."}}},"examples":{"Token Holders Reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"blockchain":"eth","contractAddress":"0x40eb746dee876ac1e78697b7ca85142d178a1fc8","holders":[{"balance":"15217676.432428","balanceRawInteger":"15217676432428000000000000","holderAddress":"0x000000000000000000000000000000000000dead"},{"balance":"0.000000000000000001","balanceRawInteger":"1","holderAddress":"0x000000000000084e91743124a982076c59f10084"}],"holdersCount":1843,"nextPageToken":"HUAjC8b1LGxx7soyEPoojoahpqtPaAhk6jTx35dALF6jLH85QD4oHWRA8E1Wf9MqjffsuHfg6pg5ac6Eocb","tokenDecimals":18}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst tokenHolders = async () =\u003e {\n  return await provider.getTokenHolders({\n    blockchain: 'eth',\n    contractAddress: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n  });\n};tokenHolders().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getTokenHoldersCount":{"post":{"tags":["Token API"],"summary":"ankr_getTokenHoldersCount","description":"Retrieves the number of holders of the specified token.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getTokenHoldersCount"],"type":"string"},"params":{"required":["blockchain","contractAddress"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the token contract."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 10000, default value — 10000."},"pageToken":{"type":"string","description":"Current page token for pagination."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"With next page token":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenHoldersCount","params":{"blockchain":"eth","contractAddress":"0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852","pageSize":2,"pageToken":"EmDqUkUByQeZ9jgedKukeKkJff9kFuPLMX6mubHUvKN1cRb3s78Yn"}}},"With pagination":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenHoldersCount","params":{"blockchain":"eth","contractAddress":"0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852","pageSize":2}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["blockchain","contractAddress","tokenDecimals","holderCountHistory","nextPageToken","latestHoldersCount"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the token contract."},"holderCountHistory":{"type":"array","items":{"type":"object","properties":{"holderCount":{"type":"integer","description":"Number of holder by day."},"lastUpdatedAt":{"type":"string","description":"Date and time of the last update."},"totalAmount":{"type":"string","description":"Total amount of the specified token at all holders addresses."},"totalAmountRawInteger":{"type":"string","description":"Raw total amount: value*10^decimals."}}},"description":"Latest available holders count by day. Array includes several days.","nullable":true},"latestHoldersCount":{"minimum":0,"type":"integer","description":"Latest available holders count for the last week."},"nextPageToken":{"type":"string","description":"Next page token for pagination."},"tokenDecimals":{"type":"integer","description":"Number of decimals the token supports."}},"description":"Result of the query."}}},"examples":{"Token Holders Count Reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"blockchain":"eth","contractAddress":"0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852","holderCountHistory":[{"holderCount":2617,"lastUpdatedAt":"2022-12-27T02:41:31Z","totalAmount":"0.148685211383143825","totalAmountRawInteger":"148685211383143825"},{"holderCount":2628,"lastUpdatedAt":"2022-12-26T02:39:57Z","totalAmount":"0.148695704516316983","totalAmountRawInteger":"148695704516316983"}],"latestHoldersCount":2628,"nextPageToken":"EmDqUkUByQeZ9jgedKukeKkJff9kFuPLMX6mubHUvKN1cRb3s78Yn","tokenDecimals":18}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst tokenHoldersCount = async () =\u003e {\n  return await provider.getTokenHoldersCount({\n    blockchain: 'eth',\n    contractAddress: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n  });\n};tokenHoldersCount().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getTokenPrice":{"post":{"tags":["Token API"],"summary":"ankr_getTokenPrice","description":"Retrieves the USD price of the specified token.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getTokenPrice"],"type":"string"},"params":{"required":["blockchain"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the token contract."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"ANKR token price":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenPrice","params":{"blockchain":"eth","contractAddress":"0x990f341946a3fdb507ae7e52d17851b87168017c"}}},"Native coin price":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenPrice","params":{"blockchain":"polygon"}}},"USDT price":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenPrice","params":{"blockchain":"eth","contractAddress":"0xdac17f958d2ee523a2206206994597c13d831ec7"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["usdPrice","blockchain"],"type":"object","properties":{"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"contractAddress":{"type":"string","description":"Address of the contract that issused the token."},"usdPrice":{"type":"string","description":"Current token price calculated by Ankr. US Dollars."}},"description":"Result of the query."}}},"examples":{"ANKR token price":{"value":{"id":1,"jsonrpc":"2.0","result":{"blockchain":"eth","contractAddress":"0x8290333cef9e6d528dd5618fb97a76f268f3edd4","usdPrice":"0.01661554527788047"}}},"Native coin price":{"value":{"id":1,"jsonrpc":"2.0","result":{"blockchain":"polygon","contractAddress":"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270","usdPrice":"0.800681001477398625"}}},"USDT price":{"value":{"id":1,"jsonrpc":"2.0","result":{"blockchain":"eth","contractAddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","usdPrice":"1"}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst tokenPrice = async () =\u003e {\n  return await provider.getTokenPrice({ \n    blockchain: 'bsc' });\n};\ntokenPrice().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getTokenTransfers":{"post":{"tags":["Early Access"],"summary":"ankr_getTokenTransfers","description":"Retrieves the details of token transfers for the specified wallet address.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getTokenTransfers"],"type":"string"},"params":{"type":"object","properties":{"address":{"type":"array","items":{"type":"string"},"description":"Address or a list of addresses to get transfer information on."},"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: eth. Multiple: [eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism, eth_goerli, polygon_mumbai, avalanche_fuji]. All chains: empty value.","nullable":true},"descOrder":{"type":"boolean","description":"Sorting order. Descending (true) or ascending (false)."},"fromBlock":{"minimum":0,"type":"integer","description":"Number of the first block in a range. Integer or string (hex value or earliest)."},"fromTimestamp":{"description":"Beginning of a time period. UNIX timestamp."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 10000, default value — 100."},"pageToken":{"type":"string","description":"Current page token for pagination."},"toBlock":{"description":"Number of the last block in a range. Integer or string (hex value or latest)."},"toTimestamp":{"description":"End of a time period. UNIX timestamp."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"By timestamp range":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTokenTransfers","params":{"address":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","blockchain":["eth","bsc"],"fromTimestamp":1655197483,"toTimestamp":1671974699}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["transfers"],"type":"object","properties":{"nextPageToken":{"type":"string","description":"Next page token for pagination."},"transfers":{"type":"array","items":{"required":["value","valueRawInteger","blockchain","tokenDecimals","thumbnail","transactionHash","blockHeight","timestamp"],"type":"object","properties":{"blockHeight":{"minimum":0,"type":"integer","description":"Number of the block with the token transaction."},"blockchain":{"type":"string","description":"Name of the blockchain token was transferred on."},"contractAddress":{"description":"Contract address of the token."},"direction":{"type":"string","description":"Direction of the transaction (in or out)."},"fromAddress":{"type":"string","description":"Address the token was sent from."},"thumbnail":{"type":"string","description":"URL to the thumbnail (logo or symbol) of the token."},"timestamp":{"minimum":0,"type":"integer","description":"UNIX timestamp when the block with the token transaction was collated."},"toAddress":{"description":"Address the token was sent to."},"tokenDecimals":{"type":"integer","description":"Number of decimals the token supports."},"tokenName":{"type":"string","description":"Name of the token."},"tokenSymbol":{"type":"string","description":"Symbol of the token."},"transactionHash":{"type":"string","description":"Hash of the transaction that involved token transfer."},"value":{"type":"string","description":"Value transferred."},"valueRawInteger":{"type":"string","description":"Raw value: value*10^decimals."}}},"description":"Token transfers.","nullable":true}},"description":"Result of the query."}}},"examples":{"Multichain transfers":{"value":{"id":1,"jsonrpc":"2.0","result":{"transfers":[{"blockHeight":4593859,"blockchain":"eth","contractAddress":"0xdd974d5c2e2928dea5f71b9825b8b646686bd200","fromAddress":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","thumbnail":"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdd974D5C2e2928deA5F71b9825b8b646686BD200/logo.png","timestamp":1511258315,"toAddress":"0x0cfb686e114d478b055ce8614621f8bb62f70360","tokenDecimals":18,"tokenName":"Kyber Network Crystal","tokenSymbol":"KNC","transactionHash":"0xfc2192e9716490dbe46c3d59c7c99f81d3b685118b01e2812872a6aae7049c4b","value":"3420332","valueRawInteger":""},{"blockHeight":10762240,"blockchain":"bsc","contractAddress":"0xc33fc11b55465045b3f1684bde4c0aa5c5f40124","fromAddress":"0xc33fc11b55465045b3f1684bde4c0aa5c5f40124","thumbnail":"","timestamp":1631185820,"toAddress":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","tokenDecimals":9,"tokenName":"BNBw.io","tokenSymbol":"BNBw","transactionHash":"0x74aa1d7c858bd8d9bb1daf5311ec5f6cdb16df165e6f242127f6502775993570","value":"21131181","valueRawInteger":""}]}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst tokenTransfers = async () =\u003e {\n  return await provider.getTokenTransfers({ \n    blockchain:    'eth',\n    address:       '0xf16e9b0d03470827a95cdfd0cb8a8a3b46969b91',\n    fromTimestamp: 1674441035,\n    toTimestamp:   1674441035,\n    pageSize:      1,\n    descOrder: true,\n    includeLogs: true });\n};\ntokenTransfers().then((reply) =\u003e {\n  console.log(reply)\n})\n","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getTransactionsByAddress":{"post":{"tags":["Early Access"],"summary":"ankr_getTransactionsByAddress","description":"Retrieves the details of transactions for the specified address.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getTransactionsByAddress"],"type":"string"},"params":{"required":["address"],"type":"object","properties":{"address":{"type":"array","items":{"type":"string"},"description":"Address to query for transactions.","nullable":true},"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: eth. Multiple: [eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism, eth_goerli, polygon_mumbai, avalanche_fuji]. All chains: empty value.","nullable":true},"descOrder":{"type":"boolean","description":"Sorting order. Descending (true) or ascending (false)."},"fromBlock":{"minimum":0,"type":"integer","description":"Number of the first block in a range. Integer or string (hex value or earliest)."},"fromTimestamp":{"minimum":0,"type":"integer","description":"Beginning of a time period. UNIX timestamp."},"includeLogs":{"type":"boolean","description":"Include logs (true) or exclude them (false)."},"pageSize":{"type":"integer","description":"Number of entries per page. int32. Max value — 10000, default value — 100."},"pageToken":{"type":"string","description":"Current page token for pagination."},"toBlock":{"description":"Number of the last block in a range. Integer or string (hex value or latest)."},"toTimestamp":{"description":"End of a time period. UNIX timestamp."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"Multichain":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTransactionsByAddress","params":{"address":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"type":"object","properties":{"nextPageToken":{"type":"string","description":"Next page token for pagination."},"transactions":{"type":"array","items":{"required":["blockNumber","from","to","transactionIndex","blockHash","value","status","blockchain","timestamp"],"type":"object","properties":{"blockHash":{"type":"string","description":"Hash of the block the transaction was in. null if a pending block. 32B."},"blockNumber":{"type":"string","description":"Number of the block the transaction was in. null if pending"},"blockchain":{"type":"string","description":"Name of the blockchain."},"contractAddress":{"description":"Address of the contract if the transaction was a contract creation, otherwise null."},"cumulativeGasUsed":{"type":"string","description":"Total amount of gas used when this transaction was executed in the block."},"from":{"type":"string","description":"Address of the sender. 20B."},"gas":{"type":"string","description":"Gas provided by the sender."},"gasPrice":{"type":"string","description":"Gas price provided by the sender. Encoded as hexadecimal."},"gasUsed":{"type":"string","description":"Total used gas by all transactions in this block."},"hash":{"description":"Hash of the transaction. 32B."},"input":{"type":"string","description":"Data sent along with the transaction."},"logs":{"type":"array","items":{"required":["blockchain","address","topics","data","blockNumber","transactionHash","transactionIndex","blockHash","logIndex","removed"],"type":"object","properties":{"address":{"type":"string","description":"Address from which the log originated."},"blockHash":{"type":"string","description":"Hash of the block where the log was in. null when it's a pending log."},"blockNumber":{"type":"string","description":"Block number where the log was in. null when it's a pending log."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"data":{"type":"string","description":"One or more 32B non-indexed arguments of the log."},"event":{"type":"object","properties":{"anonymous":{"type":"boolean","description":"Anonymous event (true) or not (false)."},"id":{"description":"Hash of the event signature."},"inputs":{"type":"array","items":{"type":"object","properties":{"indexed":{"type":"boolean","description":"Indexed event input (true) or non-indexed (false)."},"name":{"type":"string","description":"Name of the input."},"size":{"type":"integer","description":"Size of the event input."},"type":{"type":"string","description":"Type of the input."},"valueDecoded":{"type":"string","description":"Decoded value of the event input (unmarshalled)."}}},"description":"Inputs of the event.","nullable":true},"name":{"type":"string","description":"Name of the event."},"signature":{"type":"string","description":"Signature of the event."},"string":{"type":"string","description":"String containing signature of the event."},"verified":{"type":"boolean","description":"Status of the contract. Verified (true) or not verified (false)."}},"description":"Metadata of the log."},"logIndex":{"type":"string","description":"Integer of the log index position in the block. null when it's a pending log."},"removed":{"type":"boolean","description":"Status of the log. True when the log was removed due to a chain reorganization, and false if it's a valid log."},"topics":{"type":"array","items":{"type":"string"},"description":"Array of zero to four 32B DATA of indexed log arguments. In Solidity, the first topic is the hash of the signature of the event (e.g. Deposit(address, bytes32, uint256)), except you declare the event with the anonymous specifier.","nullable":true},"transactionHash":{"type":"string","description":"Hash of the transactions the log was created from. null when its a pending log."},"transactionIndex":{"type":"string","description":"Integer of the transaction's index position that the log was created from. null when it's a pending log."}}},"description":"Array of log objects that the transaction generated."},"method":{"type":"object","properties":{"id":{"description":"Hashed signature of the called method."},"inputs":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the input parameter."},"size":{"type":"integer","description":"Size of the parameter in B."},"type":{"type":"string","description":"Type of the input parameter."},"valueDecoded":{"type":"string","description":"Decoded value of the parameter (unmarshalled)."}}},"description":"Input parameters.","nullable":true},"name":{"type":"string","description":"Name of the called contract method."},"signature":{"type":"string","description":"Signature of the called method."},"string":{"type":"string","description":"String containing signature of the called method."},"verified":{"type":"boolean","description":"Status of the contract. Verified (true) or not verified (false)."}},"description":"Name of the method if the transaction was sent to a contract. Empty if no contract."},"nonce":{"type":"string","description":"Total number of transactions ever sent by the sender prior to this transaction. Encoded as hexadecimal."},"r":{"type":"string","description":"R field of the signature."},"s":{"type":"string","description":"S field of the signature."},"status":{"type":"string","description":"Status of the transaction. 1 (success) or 0 (failure)."},"timestamp":{"type":"string","description":"UNIX timestamp when the block was collated."},"to":{"description":"Address of the receiver. null if a contract creation transaction. 20B.","nullable":true},"transactionIndex":{"type":"string","description":"Integer of the transactions index position in the block. null if pending."},"type":{"type":"string","description":"Type of the transaction."},"v":{"type":"string","description":"Standardized V field of the signature."},"value":{"type":"string","description":"Value transferred. Encoded as hexadecimal."}}},"description":"Transactions found for the address.","nullable":true}},"description":"Result of the query."}}},"examples":{"Reply":{"value":{"id":1,"jsonrpc":"2.0","result":{"transactions":[{"blockHash":"0x8ffa5d490184c95c830bb4fb47b76e1fd69eb35d100f93d36d7db131837c938f","blockNumber":"0xf823ad","blockchain":"eth","cumulativeGasUsed":"0x68f589","from":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","gas":"0xbe98","gasPrice":"0x2babee650","gasUsed":"0xbd8d","hash":"0x9a70ccd1f8e0d5ddf8e78f68b477d4d5c15ddd17c66f05f820b4c67f5eb6f85a","input":"0xa9059cbb000000000000000000000000fe97e32a873aa2f926fbfc560abeef01f753c1280000000000000000000000000000000000000000000000000000002e90edd000","nonce":"0x3c4","r":"0xe5c2731e3a85d048b4adb0cf9c06cb51013728627525ce80e96c4f1317007104","s":"0x3a22f49130b59d832a6c9db79880b313e9ca2536a3fd5f10b8080e2e1c3bda97","status":"0x1","timestamp":"0x63a85033","to":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","transactionIndex":"0x3c","type":"0x2","v":"0x0","value":"0x0"}]}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst transactionByAddress = async () =\u003e {\n  return await provider.getTransactionsByAddress({ \n    blockchain: 'bsc',\n    fromBlock: 23593283,\n    toBlock: 23593283,\n    fromTimestamp: 1652600000,\n    toTimestamp: 1652700000,\n    address: [\n      '0x97242e3315c7ece760dc7f83a7dd8af6659f8c4c'\n    ],\n    pageToken: '',\n    pageSize: 10,\n    descOrder: true,\n    includeLogs: true });\n};\ntransactionByAddress().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}},"/?ankr_getTransactionsByHash":{"post":{"tags":["Query API"],"summary":"ankr_getTransactionsByHash","description":"Retrieves details of the transaction specified by its hash.","requestBody":{"content":{"application/json":{"schema":{"required":["id","jsonrpc","method","params"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"method":{"enum":["ankr_getTransactionsByHash"],"type":"string"},"params":{"required":["transactionHash"],"type":"object","properties":{"blockchain":{"type":"array","items":{"type":"string"},"description":"Name of the blockchain or list of blockchain names. Single: eth. Multiple: [eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism, eth_goerli, polygon_mumbai, avalanche_fuji]. All chains: empty value."},"decodeLogs":{"type":"boolean","description":"Decode logs (true) or not (false)."},"decodeTxData":{"type":"boolean","description":"Decode transaction data (true) or not (false)."},"includeLogs":{"type":"boolean","description":"Include logs (true) or exclude them (false)."},"transactionHash":{"type":"string","description":"Hash of the transaction."}},"description":"Click on PARAM OBJECT and edit body params before clicking Try it! And set request id!"}}},"examples":{"With Decoded Tx Data And Logs":{"value":{"id":1,"jsonrpc":"2.0","method":"ankr_getTransactionsByHash","params":{"decodeLogs":true,"decodeTxData":true,"transactionHash":"0x4792bc24356c2ddb93fee10b153e04808ff4a08aca01f276a422eab88a5dd521"}}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["id","jsonrpc","result"],"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"enum":["2.0"],"type":"string"},"result":{"required":["transactions"],"type":"object","properties":{"transactions":{"type":"array","items":{"required":["blockNumber","from","to","transactionIndex","blockHash","value","status","blockchain","timestamp"],"type":"object","properties":{"blockHash":{"type":"string","description":"Hash of the block the transaction was in. null if a pending block. 32B."},"blockNumber":{"type":"string","description":"Number of the block the transaction was in. null if pending"},"blockchain":{"type":"string","description":"Name of the blockchain."},"contractAddress":{"description":"Address of the contract if the transaction was a contract creation, otherwise null."},"cumulativeGasUsed":{"type":"string","description":"Total amount of gas used when this transaction was executed in the block."},"from":{"type":"string","description":"Address of the sender. 20B."},"gas":{"type":"string","description":"Gas provided by the sender."},"gasPrice":{"type":"string","description":"Gas price provided by the sender. Encoded as hexadecimal."},"gasUsed":{"type":"string","description":"Total used gas by all transactions in this block."},"hash":{"description":"Hash of the transaction. 32B."},"input":{"type":"string","description":"Data sent along with the transaction."},"logs":{"type":"array","items":{"required":["blockchain","address","topics","data","blockNumber","transactionHash","transactionIndex","blockHash","logIndex","removed"],"type":"object","properties":{"address":{"type":"string","description":"Address from which the log originated."},"blockHash":{"type":"string","description":"Hash of the block where the log was in. null when it's a pending log."},"blockNumber":{"type":"string","description":"Block number where the log was in. null when it's a pending log."},"blockchain":{"enum":["arbitrum","avalanche","bsc","eth","fantom","polygon","polygon_zkevm","syscoin","optimism","eth_goerli","polygon_mumbai","avalanche_fuji"],"type":"string","description":"Name of the blockchain."},"data":{"type":"string","description":"One or more 32B non-indexed arguments of the log."},"event":{"type":"object","properties":{"anonymous":{"type":"boolean","description":"Anonymous event (true) or not (false)."},"id":{"description":"Hash of the event signature."},"inputs":{"type":"array","items":{"type":"object","properties":{"indexed":{"type":"boolean","description":"Indexed event input (true) or non-indexed (false)."},"name":{"type":"string","description":"Name of the input."},"size":{"type":"integer","description":"Size of the event input."},"type":{"type":"string","description":"Type of the input."},"valueDecoded":{"type":"string","description":"Decoded value of the event input (unmarshalled)."}}},"description":"Inputs of the event.","nullable":true},"name":{"type":"string","description":"Name of the event."},"signature":{"type":"string","description":"Signature of the event."},"string":{"type":"string","description":"String containing signature of the event."},"verified":{"type":"boolean","description":"Status of the contract. Verified (true) or not verified (false)."}},"description":"Metadata of the log."},"logIndex":{"type":"string","description":"Integer of the log index position in the block. null when it's a pending log."},"removed":{"type":"boolean","description":"Status of the log. True when the log was removed due to a chain reorganization, and false if it's a valid log."},"topics":{"type":"array","items":{"type":"string"},"description":"Array of zero to four 32B DATA of indexed log arguments. In Solidity, the first topic is the hash of the signature of the event (e.g. Deposit(address, bytes32, uint256)), except you declare the event with the anonymous specifier.","nullable":true},"transactionHash":{"type":"string","description":"Hash of the transactions the log was created from. null when its a pending log."},"transactionIndex":{"type":"string","description":"Integer of the transaction's index position that the log was created from. null when it's a pending log."}}},"description":"Array of log objects that the transaction generated."},"method":{"type":"object","properties":{"id":{"description":"Hashed signature of the called method."},"inputs":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the input parameter."},"size":{"type":"integer","description":"Size of the parameter in B."},"type":{"type":"string","description":"Type of the input parameter."},"valueDecoded":{"type":"string","description":"Decoded value of the parameter (unmarshalled)."}}},"description":"Input parameters.","nullable":true},"name":{"type":"string","description":"Name of the called contract method."},"signature":{"type":"string","description":"Signature of the called method."},"string":{"type":"string","description":"String containing signature of the called method."},"verified":{"type":"boolean","description":"Status of the contract. Verified (true) or not verified (false)."}},"description":"Name of the method if the transaction was sent to a contract. Empty if no contract."},"nonce":{"type":"string","description":"Total number of transactions ever sent by the sender prior to this transaction. Encoded as hexadecimal."},"r":{"type":"string","description":"R field of the signature."},"s":{"type":"string","description":"S field of the signature."},"status":{"type":"string","description":"Status of the transaction. 1 (success) or 0 (failure)."},"timestamp":{"type":"string","description":"UNIX timestamp when the block was collated."},"to":{"description":"Address of the receiver. null if a contract creation transaction. 20B.","nullable":true},"transactionIndex":{"type":"string","description":"Integer of the transactions index position in the block. null if pending."},"type":{"type":"string","description":"Type of the transaction."},"v":{"type":"string","description":"Standardized V field of the signature."},"value":{"type":"string","description":"Value transferred. Encoded as hexadecimal."}}},"description":"Queried transactions.","nullable":true}},"description":"Result of the query."}}},"examples":{"With Decoded Tx Data And Logs":{"value":{"id":1,"jsonrpc":"2.0","result":{"transactions":[{"blockHash":"0x1e7b69036e5de4094839e186facabe2e3fb3586f52888bdb22f96e265f77aaeb","blockNumber":"0xf85b14","blockchain":"eth","cumulativeGasUsed":"0x57b86","from":"0x77223f67d845e3cbcd9cc19287e24e71f7228888","gas":"0x3012f","gasPrice":"0x298c22300","gasUsed":"0x200ca","hash":"0x4792bc24356c2ddb93fee10b153e04808ff4a08aca01f276a422eab88a5dd521","input":"0x0372e988016462e1719eb1692cb7af7016172262cb287f37aa000d4f","logs":[{"address":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","blockHash":"0x1e7b69036e5de4094839e186facabe2e3fb3586f52888bdb22f96e265f77aaeb","blockNumber":"0xf85b14","blockchain":"eth","data":"0x000000000000000000000000000000000000000000000000008d702a9a8be800","event":{"anonymous":false,"id":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","inputs":[{"indexed":true,"name":"_from","size":20,"type":"address","valueDecoded":"0x00000000A991C429eE2Ec6df19d40fe0c80088B8"},{"indexed":true,"name":"_to","size":20,"type":"address","valueDecoded":"0x72e988016462e1719Eb1692cB7aF7016172262cb"},{"indexed":false,"name":"_value","size":256,"type":"uint256","valueDecoded":"39811300000000000"}],"name":"Transfer","signature":"Transfer(address,address,uint256)","string":"event Transfer(address indexed _from, address indexed _to, uint256 _value)","verified":false},"logIndex":"0x2","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000000000000a991c429ee2ec6df19d40fe0c80088b8","0x00000000000000000000000072e988016462e1719eb1692cb7af7016172262cb"],"transactionHash":"0x4792bc24356c2ddb93fee10b153e04808ff4a08aca01f276a422eab88a5dd521","transactionIndex":"0x5"}],"nonce":"0x1182","r":"0x3857d29f619e161e00141abecf5f3420dfbda34dfaf7e10cac20758c5cdd2d0f","s":"0x7843a450a5f1224e9d6e10e7518b9aba67e6dd1b442c11b3e8926eaca3b72546","status":"0x1","timestamp":"0x63aaec8b","to":"0x00000000a991c429ee2ec6df19d40fe0c80088b8","transactionIndex":"0x5","type":"0x2","v":"0x1","value":"0x61321"}]}}}}}}}},"x-readme":{"code-samples":[{"code":"import { AnkrProvider } from '@ankr.com/ankr.js';\n\nconst provider = new AnkrProvider();\nconst transactions = async () =\u003e {\n  return await provider.getTransactionsByHash({\n    transactionHash:\n      '0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f',\n    decodeTxData: true,\n  });\n};transactions().then((reply) =\u003e {\n  console.log(reply)\n})","install":"npm install @ankr.com/ankr.js","language":"node","name":"Request via Ankr.js SDK"}]}}}}}